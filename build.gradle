buildscript {
  repositories {
    google()
    mavenCentral()
  }
}

plugins {
  id 'groovy'
  id 'org.jetbrains.kotlin.jvm' version '1.4.30'
  id 'maven'
  id "java-gradle-plugin"
  id "org.jetbrains.gradle.plugin.idea-ext" version "1.0"
  id "com.gradle.plugin-publish" version '0.13.0'
}

dependencies {
  repositories {
    google()
    mavenCentral()
    maven {url 'https://plugins.gradle.org/m2/' }
  }

  compileOnly gradleApi()
  implementation localGroovy()
  implementation 'com.android.tools.build:gradle:3.6.1'
  implementation 'com.android.tools:sdk-common:26.6.1'
  implementation 'com.android.tools:sdk-common:27.0.2'
  implementation 'com.squareup:javawriter:2.4.0'
  implementation 'com.google.guava:guava:16.0.1'

  testImplementation 'junit:junit:4.12'
  testImplementation 'com.google.truth:truth:1.0.1'
  testImplementation gradleTestKit()
}

group = 'com.jakewharton.paraphrase'
version = '1.0.0-SNAPSHOT'

gradlePlugin {
  plugins {
    placeholdersValidator {
      id = 'com.jakewharton.paraphrase'
      implementationClass = 'com.jakewharton.paraphrase.ParaphrasePlugin'
    }
  }
}

/*
 * Extra configuration needed to enable the text fixtures classpath to see the plugin's classpath
 *
 * See:
 * https://stackoverflow.com/a/54393454/1452741
 */
task fixIdeaPluginClasspath {
  doFirst {
    configure(tasks.pluginUnderTestMetadata) {
      def ideaClassesPath = project.buildDir.toPath().resolveSibling("out").resolve("production")
      def newClasspath = pluginClasspath as List
      newClasspath.add(0, ideaClassesPath)
      pluginClasspath.setFrom(newClasspath)
    }
  }
}
pluginUnderTestMetadata.mustRunAfter(fixIdeaPluginClasspath)

idea.project.settings {
  taskTriggers {
    beforeBuild fixIdeaPluginClasspath, pluginUnderTestMetadata
  }
}

tasks.withType(PluginUnderTestMetadata).configureEach {
  pluginClasspath.from(configurations.compileOnly)
}


//install {
//  repositories.mavenInstaller {
//    pom.artifactId = 'paraphrase'
//  }
//}
//uploadArchives {
//  repositories.mavenDeployer {
//    pom.artifactId = 'paraphrase'
//  }
//}
//
//modifyPom {
//  project {
//    name 'Paraphrase'
//    description "Gradle plugin which generates compile-safe format string builders."
//    url 'https://github.com/JakeWharton/paraphrase'
//    inceptionYear '2014'
//
//    scm {
//      url 'https://github.com/JakeWharton/paraphrase'
//      connection 'scm:git:git://github.com/JakeWharton/paraphrase.git'
//      developerConnection 'scm:git:ssh://git@github.com/JakeWharton/paraphrase.git'
//    }
//
//    licenses {
//      license {
//        name 'The Apache Software License, Version 2.0'
//        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//        distribution 'repo'
//      }
//    }
//
//    developers {
//      developer {
//        id 'jakewharton'
//        name 'Jake Wharton'
//        email 'jakewharton@gmail.com'
//      }
//    }
//  }
//}
